import { Component, OnInit, EventEmitter, Output } from '@angular/core';

@Component({
  selector: 'app-input-button-unit',
  template: `
    <!-- <p>input-button-unit works!</p> -->
    <input
      class="todo-input"
      #inputElementRef
      type="text"
      [value]="title"
      (keyup.enter)="submitValueKeyEnter($event)"
    />

    <!-- Button save -->
    <!-- <button class="btn" (click)="submitValue(inputElementRef.value)">
      Set up to-do
    </button> -->

    <button  class="btn" (click)="submitValue(inputElementRef.value)">
      <div class="flex flex-direction-row align-items-center">
        <span>Set up to-do </span>
        <i class="pi pi-plus ml-1 text-xs"></i>
      </div>
    </button>

    <!-- <button (click)="changeTitle_ext(inputElementRef)">Save</button> -->
    <!-- <button>Save</button> -->
    <!-- (keyup.enter)="submitValue($event.target.value)" -->
  `,
  styleUrls: ['./input-button-unit.component.scss'],
})
export class InputButtonUnitComponent implements OnInit {
  title = 'I Love You';

  @Output() submit: EventEmitter<string> = new EventEmitter<string>();

  constructor() {
    // // this.title = 'I Love Angular';
    // console.log('in constructor');
    // this.changeTitle('My First Angular App');
    // console.log(this.title);
    // // this.changeTitle('I Love Angular');
  }

  ngOnInit(): void {
    // setTimeout(() => {
    //   this.title = 'This is not the title you are looking for';
    // }, 3000);
  }

  // changeTitle(e: Event): void {
  //   // console.log(event);
  //   const target = e.target as HTMLInputElement;

  //   this.title = target.value; // the original functionality still works
  // }

  // changeTitle_ext(inputElementReference: any) {
  //   // console.log('inputElementReference = ' + inputElementReference)
  //   this.title = inputElementReference.value; // the original functionality still works
  // }

  submitValue(newTitle: string) {
    if (!this.isEmpty(newTitle)) {
      this.submit.emit(newTitle);
      this.title = '';
    }
  }

  submitValueKeyEnter(e: Event) {
    var target = e.target as HTMLInputElement;
    if (!this.isEmpty(target.value)) {
      this.submit.emit(target.value);

      this.title = '';
    }
  }

  isEmpty(str: string) {
    return !str || str.length === 0;
  }

  generateTitle(): string {
    return 'This title was generated by a method.';
  }
}

function multiply(x: number, y: number) {
  return x * y;
}

let z = multiply(4, 5);
console.log(z);
