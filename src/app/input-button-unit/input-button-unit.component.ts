import { Component, OnInit, EventEmitter, Output } from '@angular/core';
import { TodoItem } from '../interfaces/todo-item';

@Component({
  selector: 'app-input-button-unit',
  templateUrl:  './input-button-unit.component.html',
  styleUrls: ['./input-button-unit.component.scss'],
})
export class InputButtonUnitComponent implements OnInit {
  title: string;
  item: TodoItem;
  listPriority: string[];



  // Date
  value: Date;
  minDate?: Date;
  maxDate?: Date;
  invalidDates?: Array<Date>;
  @Output() submit: EventEmitter<TodoItem> = new EventEmitter<TodoItem>();

  constructor() {
    this.value  = new Date();
    this.title = '';
    this.item = {
      title: '',
      description: '',
      completed: false,
      cre_time: undefined,
      start_time: undefined,
      deadline_time: undefined,
      comp_time: undefined,
      priority: undefined,
    };
    this.listPriority = ['P1', 'P2', 'P3', 'P4'];
  }

  ngOnInit(): void {
    let today = new Date();
    let month = today.getMonth();
    let year = today.getFullYear();
    let prevMonth = month === 0 ? 11 : month - 1;
    let prevYear = prevMonth === 11 ? year - 1 : year;
    let nextMonth = month === 11 ? 0 : month + 1;
    let nextYear = nextMonth === 0 ? year + 1 : year;
    this.minDate = new Date();
    this.minDate.setMonth(prevMonth);
    this.minDate.setFullYear(prevYear);
    this.maxDate = new Date();
    this.maxDate.setMonth(nextMonth);
    this.maxDate.setFullYear(nextYear);

    let invalidDate = new Date();
    invalidDate.setDate(today.getDate() - 1);
    this.invalidDates = [today, invalidDate];
  }

  submitValue() {
    if (!this.isEmpty(this.title)) {
      this.item.title = this.title;
      this.submit.emit(this.item);
      this.title = '';
      // console.log('inputElementRef.value = ' + inputElementRef.value)
    }
  }

  // submitValueKeyEnter(e: Event) {
  //   var target = e.target as HTMLInputElement;
  //   if (!this.isEmpty(target.value)) {
  //     this.item.title = this.title;
  //     this.submit.emit(this.item);
  //     this.title = '';
  //   }
  // }

  isEmpty(str: string) {
    return !str || str.length === 0;
  }

  generateTitle(): string {
    return 'This title was generated by a method.';
  }
}
