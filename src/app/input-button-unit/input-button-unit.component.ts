import { Component, OnInit, EventEmitter, Output } from '@angular/core';

@Component({
  selector: 'app-input-button-unit',
  template: `
    <!-- <p>input-button-unit works!</p> -->
    <span class="p-float-label">
      <input
        id="float-input"
        class=""
        style="width: 200%"
        #inputElementRef
        type="text"
        [(ngModel)]="title"
        (keyup.enter)="submitValueKeyEnter($event)"
        pInputText
      />
      <label for="float-input" class="text-sm">Title</label>
    </span>

    <!-- <input
      class="todo-input"
      #inputElementRef
      type="text"
      [value]="title"
      (keyup.enter)="submitValueKeyEnter($event)"
    /> -->

    <!-- Button save -->
    <!-- <button class="btn" (click)="submitValue(inputElementRef.value)">
      Set up to-do
    </button> -->

    <!-- <button class="btn" (click)="submitValue(inputElementRef.value)">
      <div class="flex flex-direction-row align-items-center">
        <span>Set up to-do </span>
        <i class="pi pi-plus ml-1 text-xs"></i>
      </div>
    </button> -->

    <p-button
      label="Submit"
      icon="pi pi-check"
      iconPos="right"
      class=""
      (click)="submitValue()"
    ></p-button>

    <!-- <button (click)="changeTitle_ext(inputElementRef)">Save</button> -->
    <!-- <button>Save</button> -->
    <!-- (keyup.enter)="submitValue($event.target.value)" -->
  `,
  styleUrls: ['./input-button-unit.component.scss'],
})
export class InputButtonUnitComponent implements OnInit {
  title: string;
  @Output() submit: EventEmitter<string> = new EventEmitter<string>();

  constructor() {
    this.title = '';
  }

  ngOnInit(): void {}

  submitValue() {

    if (!this.isEmpty(this.title)) {
      this.submit.emit(this.title);
      this.title = '';
      // console.log('inputElementRef.value = ' + inputElementRef.value)
    }
  }

  submitValueKeyEnter(e: Event) {
    var target = e.target as HTMLInputElement;
    if (!this.isEmpty(target.value)) {
      this.submit.emit(target.value);
      this.title = '';
    }
  }

  isEmpty(str: string) {
    return !str || str.length === 0;
  }

  generateTitle(): string {
    return 'This title was generated by a method.';
  }
}
